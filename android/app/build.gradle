plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def localProperties = new Properties()
if (rootProject.file("local.properties").exists()) {
    localProperties.load(rootProject.file("local.properties").newDataInputStream())
}

android {
    compileSdk 33
    ndkVersion "25.2.9519653"

    defaultConfig {
        applicationId "com.bwqr.mavinote"
        minSdk 21
        targetSdk 32
        versionCode 100
        versionName "0.1.0"

        manifestPlaceholders.versionCode = versionCode
        manifestPlaceholders.versionName = versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        def ApiUrl = 'API_URL'
        def WsUrl = 'WS_URL'

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', ApiUrl, '"http://ec2-3-70-235-190.eu-central-1.compute.amazonaws.com/api"'
            buildConfigField 'String', WsUrl, '"ws://ec2-3-70-235-190.eu-central-1.compute.amazonaws.com/api/notify/connect"'
        }

        debug {
            debuggable true

            buildConfigField 'String', ApiUrl, "\"${localProperties.getProperty("endpoint.apiUrl")}\""
            buildConfigField 'String', WsUrl, "\"${localProperties.getProperty("endpoint.wsUrl")}\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.bwqr.mavinote'
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module = '../../reax'
    libname = 'reax'
    extraCargoBuildArguments = ['--package', 'android']
    targets = gradle.startParameter.taskNames.any { it.toLowerCase().contains("debug") } ? ['x86_64'] : ['x86_64', 'arm64']
    profile = gradle.startParameter.taskNames.any { it.toLowerCase().contains("debug") } ? "debug" : "release"
}

tasks.whenTaskAdded { task ->
    if ((task.name == 'javaPreCompileDebug' || task.name == 'javaPreCompileRelease')) {
        task.dependsOn 'cargoBuild'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:1.0.1"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'androidx.core:core-ktx:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}